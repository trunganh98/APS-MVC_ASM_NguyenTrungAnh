#pragma checksum "D:\SEM3\W\MovieWebSite\MovieWebSite\Components\MovieList.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8d2c53b175eb377715dd49bad9ce557cf3a39abf"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace MovieWebSite.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\SEM3\W\MovieWebSite\MovieWebSite\Components\MovieList.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SEM3\W\MovieWebSite\MovieWebSite\Components\MovieList.razor"
using MovieWebSite.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\SEM3\W\MovieWebSite\MovieWebSite\Components\MovieList.razor"
using MovieWebSite.Services;

#line default
#line hidden
#nullable disable
    public partial class MovieList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 82 "D:\SEM3\W\MovieWebSite\MovieWebSite\Components\MovieList.razor"
 
    Movie selectedMovie;
    string selectedMovieId;

    void SelectMovie(string productId)
    {
        selectedMovieId = productId;
        selectedMovie = MovieService.GetMovies().First(x => x.Id == productId);
        GetCurrentRating();
    }

    int currentRating = 0;
    int voteCount = 0;
    string voteLabel;

    void GetCurrentRating()
    {
        if (selectedMovie.Ratings == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectedMovie.Ratings.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";
            currentRating = selectedMovie.Ratings.Sum() / voteCount;
        }

        System.Console.WriteLine($"Current rating for {selectedMovie.Id}: {currentRating}");
    }

    void SubmitRating(int rating)
    {
        System.Console.WriteLine($"Rating received for {selectedMovie.Id}: {rating}");
        MovieService.AddRating(selectedMovieId, rating);
        SelectMovie(selectedMovieId);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private JsonFileMovieServices MovieService { get; set; }
    }
}
#pragma warning restore 1591
